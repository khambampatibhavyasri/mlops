image: python:3.10-slim

variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  PIP_DISABLE_PIP_VERSION_CHECK: "1"
  PIP_NO_INPUT: "1"

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - .cache/pip
    - .dvc/cache

stages: [setup, train, automl, push]

# ---------- reusable setup (install deps + DVC auth) ----------
.setup:
  stage: setup
  before_script:
    - apt-get update && apt-get install -y --no-install-recommends git gcc g++ build-essential libgomp1 curl && rm -rf /var/lib/apt/lists/*
    - python -m pip install -U pip wheel setuptools
    - pip install -r requirements.txt
    # DVC remote auth (writes .dvc/config.local)
    - dvc remote list || true
    - dvc remote modify origin auth basic
    - dvc remote modify origin --local user "$DAGSHUB_USER"
    - dvc remote modify origin --local password "$DAGSHUB_TOKEN"
    - dvc pull || true
    # expose MLflow creds to processes (GitLab already injects envs; this makes it explicit)
    - export MLFLOW_TRACKING_URI="$MLFLOW_TRACKING_URI"
    - export MLFLOW_TRACKING_USERNAME="$MLFLOW_TRACKING_USERNAME"
    - export MLFLOW_TRACKING_PASSWORD="$MLFLOW_TRACKING_PASSWORD"
  artifacts:
    when: always
    expire_in: 1 week
    paths:
      - .dvc/config.local
      - .cache/pip
  rules:
    - when: always   # ensure setup runs on every pipeline

# ---------- just show versions; proves setup ran ----------
setup:
  extends: .setup
  script:
    - python -c "import sys; print('Python', sys.version)"
    - dvc version

# ---------- baseline training ----------
train:
  extends: .setup
  stage: train
  needs: ["setup"]
  script:
    - dvc repro train
  artifacts:
    expire_in: 1 week
    paths:
      - dvc.lock
      - models/
      - reports/
      - data/processed/

# ---------- AutoML with PyCaret ----------
automl:
  extends: .setup
  stage: automl
  needs: ["train"]
  script:
    - dvc repro automl_pycaret
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
  artifacts:
    expire_in: 1 week
    paths:
      - dvc.lock
      - models/
      - reports/

# ---------- push DVC artifacts to DAGsHub ----------
push_dvc:
  extends: .setup
  stage: push
  needs: ["train", "automl"]
  script:
    - dvc status -c
    - dvc push -v
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
